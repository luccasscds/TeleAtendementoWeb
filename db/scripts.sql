-- CRIAÇÃO DE TABELAS
CREATE TABLE ENDERECO (
    ID         INTEGER       PRIMARY KEY AUTOINCREMENT,
    LOGRADOURO VARCHAR (256),
    NUMERO     INTEGER,
    CEP        INTEGER,
    BAIRRO     VARCHAR (50),
    CIDADE     VARCHAR (30),
    ESTADO     VARCHAR (20) 
);
CREATE TABLE TIPO_TELEFONE (
    ID   INTEGER      PRIMARY KEY AUTOINCREMENT,
    TIPO VARCHAR (10) 
);
CREATE TABLE TELEFONE (
    ID      INTEGER PRIMARY KEY AUTOINCREMENT,
    NUMERO  INTEGER,
    DDD     INTEGER,
    TIPO_ID INTEGER REFERENCES TIPO_TELEFONE (ID) ON DELETE CASCADE,
    FOREIGN KEY (
        TIPO_ID
    )
    REFERENCES TIPO_TELEFONE (ID) 
);
CREATE TABLE PESSOA (
    ID           INTEGER       PRIMARY KEY AUTOINCREMENT,
    NOME         VARCHAR (256) NOT NULL,
    CPF          BIGINT        NOT NULL
                               UNIQUE,
    ENDERECO_ID  INTEGER       REFERENCES ENDERECO (ID) ON DELETE CASCADE,
    TELEFONES_ID INTEGER       REFERENCES PESSOA_TELEFONE (ID) ON DELETE CASCADE
);
CREATE TABLE PESSOA_TELEFONE (
    ID          INTEGER PRIMARY KEY AUTOINCREMENT,
    ID_PESSOA   INTEGER REFERENCES PESSOA (ID) ON DELETE CASCADE,
    ID_TELEFONE INTEGER REFERENCES TELEFONE (ID) ON DELETE CASCADE
);

-- INSERIR DADOS NAS TABELAS
INSERT INTO ENDERECO (
    LOGRADOURO, NUMERO, CEP, BAIRRO, CIDADE, ESTADO
) VALUES 
('rua aminthas floriano', 751, 64007390, 'Água Mineral', 'Teresina', 'Piauí'),
('Rua Dezenove', 700, 64079073, 'Novo Horizonte', 'Teresina', 'Piauí');

-- pegando o id após insert na tabela
INSERT INTO ENDERECO (
    LOGRADOURO, NUMERO, CEP, BAIRRO, CIDADE, ESTADO
) VALUES ('Rua Cláudio Mascarelo', 967, 93290310, 'Santo Inácio', 'Esteio', 'RS') RETURNING ID;
INSERT INTO PESSOA (
    NOME, CPF, ENDERECO_ID, TELEFONES_ID
) 
VALUES 
('Lucas Silva', 07761044499, 1, 1),
('Dínnyfa Mikaella', 07761155510, 2, null);
INSERT INTO TIPO_TELEFONE (
    TIPO
) VALUES 
('pessoal'),
('resindecial');
INSERT INTO TELEFONE (
    NUMERO, DDD, TIPO_ID
) VALUES (
    988198568, 86, 1
);
INSERT INTO PESSOA_TELEFONE (
    ID_PESSOA, ID_TELEFONE
) VALUES (
    1, 1
);

-- consultas

-- pega todos Pessoa, portanto vai se repeti 
SELECT 
*
   --p.ID, p.NOME, p.CPF, e.LOGRADOURO, e.NUMERO, e.CEP, e.BAIRRO, e.CIDADE, e.ESTADO, t.ID AS 'ID_TELEFONE', t.DDD, t.NUMERO AS 'NUMERO_TELEFONE', tt.TIPO
FROM PESSOA p 
LEFT JOIN ENDERECO e 
ON p.ENDERECO_ID = e.ID
LEFT JOIN PESSOA_TELEFONE pt
ON pt.ID_PESSOA = P.ID 
LEFT JOIN TELEFONE t
ON pt.ID_TELEFONE = t.ID 
LEFT JOIN TIPO_TELEFONE tt
ON tt.ID = t.TIPO_ID
ORDER BY p.NOME;

-- pega todos os dados
SELECT 
   p.ID, p.NOME, p.CPF, e.LOGRADOURO, e.NUMERO, e.CEP, e.BAIRRO, e.CIDADE, e.ESTADO, t.DDD, t.NUMERO AS 'Nº TELEFONE', tt.TIPO
FROM PESSOA p 
LEFT JOIN ENDERECO e 
ON p.ENDERECO_ID = e.ID
LEFT JOIN PESSOA_TELEFONE pt
ON pt.ID_PESSOA = P.ID 
LEFT JOIN TELEFONE t
ON pt.ID_TELEFONE = t.ID 
LEFT JOIN TIPO_TELEFONE tt
ON tt.ID = t.TIPO_ID
WHERE p.CPF = 56738493207;


-- Pega só as Pessoa
SELECT * FROM PESSOA;


-- pega mais informações, como enderenço de uma só Pessoa.
SELECT 
    /*p.NOME, */e.LOGRADOURO, e.NUMERO, e.CEP, e.BAIRRO, e.CIDADE, e.ESTADO
FROM PESSOA p
LEFT JOIN ENDERECO e 
ON p.ENDERECO_ID = e.ID
WHERE p.ID = 1; -- << CONSULTA POR ID


-- pega mais informações, dos telefones de uma só Pessoa.
SELECT 
     /*p.NOME, */t.DDD, t.NUMERO AS 'Nº TELEFONE', tt.TIPO
FROM PESSOA p 
LEFT JOIN PESSOA_TELEFONE pt 
ON pt.ID_PESSOA = P.ID 
LEFT JOIN TELEFONE t 
ON pt.ID_TELEFONE = t.ID 
LEFT JOIN TIPO_TELEFONE tt
ON tt.ID = t.TIPO_ID 
WHERE p.ID = 1; -- << CONSULTA POR ID

SELECT * FROM PESSOA;

-- TRIGGER
--    DELETE PESSOA > ENDERECO
CREATE TRIGGER TRG_DELETE_PESSOA_ENDERECO
    BEFORE DELETE ON PESSOA
BEGIN
    DELETE FROM ENDERECO
    WHERE ID = (
        SELECT p.ENDERECO_ID
        FROM PESSOA p
        WHERE p.ID = OLD.ID
    );
END;

--    DELETE PESSOA > PESTEL > TELEFONE > TIPTELEFONE
CREATE TRIGGER TRG_PESSOA_PESTEL_TELEFONE_TIPTELEFONE
        BEFORE DELETE ON PESSOA
BEGIN
    DELETE FROM TIPO_TELEFONE 
	WHERE ID = (
		select t.TIPO_ID from TELEFONE t where t.ID = (
			select pt.ID_TELEFONE from PESSOA_TELEFONE pt where pt.ID_PESSOA = OLD.ID
		)
	);

	DELETE FROM TELEFONE 
	WHERE ID = (
		select pt.ID_TELEFONE from PESSOA_TELEFONE pt where pt.ID_PESSOA = OLD.ID
	);

	DELETE FROM PESSOA_TELEFONE 
	WHERE ID_PESSOA = (select p.ID from PESSOA p where p.ID = OLD.ID);
END;

---

UPDATE TIPO_TELEFONE SET TIPO=@TIPO WHERE ID = @ID;